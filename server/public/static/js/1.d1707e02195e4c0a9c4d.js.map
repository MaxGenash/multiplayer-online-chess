{"version":3,"sources":["webpack:///static/js/1.d1707e02195e4c0a9c4d.js","webpack:///index.vue?8da4","webpack:///userCard.vue","webpack:///./src/components/game/userCard.vue?6032","webpack:///./src/components/game/template.html","webpack:///./src/components/game/index.vue","webpack:///./src/components/game/userCard.vue"],"names":["webpackJsonp","234","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_vue","_vue2","_chessground","_chessground2","_chess","_chess2","_garbochess","_garbochess2","_userCard","_userCard2","_boardHistory","_boardHistory2","_bodyMen","_bodyMen2","_lstorage","_lstorage2","_user","_user2","_actions","_getters","_jquery","_jquery2","_vueMaterialComponents","_vueMaterialComponents2","timesColor","white","black","stylesBoard","board","pieces","template","route","canActivate","transition","user_acces","get","_id","redirect","data","chattext","mensjGame","userWhite","userBlack","user","getUser","usersConnect","userconvert","ground","fen","orientation","history","styleboard","active","state","chess","styles","dirServer","mixins","props","components","UserCard","BoardHistory","BodyMen","vuex","actions","boardGameMove","boardGameTurn","boardGameCountDown","getters","pgn","getGamePgn","turn","getGameTurn","time","getGameTimesUsers","events","move","this","changeStateGame","times","gameFinish","dataResult","stateFinishGame","mensaje","recibeMensaje","men","methods","selectUserToConversation","c","f","setTimeout","$socket","emit","arguments","length","undefined","$broadcast","bind","userToConversation","idDiv","divScroll","document","getElementById","atBottom","scrollTop","scrollHeight","clientHeight","push","animate","loadUserConvert","parms","log","imageUrl","name","loadOtherUser","otherUser","next","then","response","image","sendMensaje","thisUser","username","u1","u2","nickname","body","type","public","send","recibe","countDown","seg","clearInterval","result","color","motiv","countDownStart","setInterval","chessToDests","dests","SQUARES","forEach","s","ms","moves","square","verbose","map","m","to","chessToColor","t","onMove","orig","dest","from","promotion","event","idBoard","PcIngeniesMove","sfrom","FormatSquare","sto","pcMove","InitializeFromFen","Search","isVsPc","isHumanVsPC","load_pgn","set","turnColor","movable","changeOrientation","changeStyle","styleAdapter","style","height","clientWidth","initGame","_len","callbacks","Array","_key","del","$route","router","go","parmsLoad","range","limit","skip","someUser","gameState","retorn","gameOver","game_over","in_check","in_checkmate","in_draw","_result","in_stalemate","_result2","in_threefold_repetition","_result3","insufficient_material","_result4","rendir","stop","created","ResetGame","viewOnly","animation","duration","free","premove","after","drawable","enabled","showDests","offset","top","watch","newVal","oldVal","235","String","pad","n","lenght","slice","filters","boardTime","min","parseInt","segs","346","358","366","__vue_script__","__vue_template__","__vue_styles__","__vue_options__","options","computed","keys","key","367"],"mappings":"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","file":"static/js/1.d1707e02195e4c0a9c4d.js","sourcesContent":["webpackJsonp([1,4],{\n\n/***/ 234:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _vue = __webpack_require__(37);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _chessground = __webpack_require__(28);\n\t\n\tvar _chessground2 = _interopRequireDefault(_chessground);\n\t\n\tvar _chess = __webpack_require__(26);\n\t\n\tvar _chess2 = _interopRequireDefault(_chess);\n\t\n\tvar _garbochess = __webpack_require__(57);\n\t\n\tvar _garbochess2 = _interopRequireDefault(_garbochess);\n\t\n\tvar _userCard = __webpack_require__(367);\n\t\n\tvar _userCard2 = _interopRequireDefault(_userCard);\n\t\n\tvar _boardHistory = __webpack_require__(216);\n\t\n\tvar _boardHistory2 = _interopRequireDefault(_boardHistory);\n\t\n\tvar _bodyMen = __webpack_require__(218);\n\t\n\tvar _bodyMen2 = _interopRequireDefault(_bodyMen);\n\t\n\tvar _lstorage = __webpack_require__(2);\n\t\n\tvar _lstorage2 = _interopRequireDefault(_lstorage);\n\t\n\tvar _user = __webpack_require__(5);\n\t\n\tvar _user2 = _interopRequireDefault(_user);\n\t\n\tvar _actions = __webpack_require__(39);\n\t\n\tvar _getters = __webpack_require__(40);\n\t\n\tvar _jquery = __webpack_require__(58);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _vueMaterialComponents = __webpack_require__(24);\n\t\n\tvar _vueMaterialComponents2 = _interopRequireDefault(_vueMaterialComponents);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar timesColor = {\n\t  white: 1,\n\t  black: 1\n\t};\n\tvar stylesBoard = {\n\t  board: ['light-wood-3d', 'blue', 'wood', 'marble'],\n\t  pieces: ['merida', 'staunton', 'pirouetti', 'cburnett']\n\t};\n\texports.default = {\n\t  template: __webpack_require__(358),\n\t  route: {\n\t    canActivate: function canActivate(transition) {\n\t      return _user2.default.user_acces('authenticate') && _lstorage2.default.get('board')._id ? true : transition.redirect('home');\n\t    }\n\t  },\n\t  data: function data() {\n\t    return {\n\t      chattext: '',\n\t      mensjGame: [],\n\t      userWhite: {},\n\t      userBlack: {},\n\t      user: _user2.default.getUser(),\n\t      usersConnect: [],\n\t      userconvert: _lstorage2.default.get('userconvert', {}),\n\t      ground: 0,\n\t      fen: 'none',\n\t      orientation: 'white',\n\t      history: [],\n\t      styleboard: true,\n\t      active: true,\n\t      state: '',\n\t      chess: new _chess2.default(),\n\t      stylesBoard: stylesBoard,\n\t      styles: _lstorage2.default.get('styleBoard', {\n\t        board: 1,\n\t        pieces: 0\n\t      }),\n\t      board: _lstorage2.default.get('board'),\n\t      dirServer: _lstorage2.default.get('serverDir')\n\t    };\n\t  },\n\t\n\t  mixins: [_vueMaterialComponents2.default],\n\t  props: {},\n\t  components: {\n\t    UserCard: _userCard2.default,\n\t    BoardHistory: _boardHistory2.default,\n\t    BodyMen: _bodyMen2.default\n\t  },\n\t  vuex: {\n\t    actions: {\n\t      boardGameMove: _actions.boardGameMove,\n\t      boardGameTurn: _actions.boardGameTurn,\n\t      boardGameCountDown: _actions.boardGameCountDown\n\t    },\n\t    getters: {\n\t      pgn: _getters.getGamePgn,\n\t      turn: _getters.getGameTurn,\n\t      time: _getters.getGameTimesUsers\n\t    }\n\t  },\n\t  events: {\n\t    move: function move(board) {\n\t      if (this.active) {\n\t        this.boardGameMove(board.pgn);\n\t      }\n\t      this.changeStateGame(board.pgn, board.move);\n\t      if (board.times) {\n\t        this.boardGameCountDown(board.times.black, 'black');\n\t        this.boardGameCountDown(board.times.white, 'white');\n\t      }\n\t    },\n\t    gameFinish: function gameFinish(dataResult) {\n\t      this.stateFinishGame(dataResult);\n\t    },\n\t    mensaje: function mensaje(data) {\n\t      this.recibeMensaje(data.men);\n\t    }\n\t  },\n\t  methods: {\n\t    selectUserToConversation: function selectUserToConversation() {\n\t      var data = {\n\t        c: 'chat',\n\t        f: 'username',\n\t        data: {\n\t          user: this.user\n\t        }\n\t      };\n\t      setTimeout(function () {\n\t        this.$socket.emit('event', data, function () {\n\t          this.usersConnect = arguments.length <= 1 ? undefined : arguments[1];\n\t          this.$broadcast('modal::open', 'usersConnect');\n\t        }.bind(this));\n\t      }.bind(this), 2);\n\t    },\n\t    userToConversation: function userToConversation(user) {\n\t      this.userconvert = user;\n\t      this.$broadcast('modal::close', 'some', 'usersConnect');\n\t    },\n\t    recibeMensaje: function recibeMensaje(men) {\n\t      var idDiv = 'chatConvertGame';\n\t      var divScroll = document.getElementById(idDiv);\n\t      var atBottom = divScroll.scrollTop >= divScroll.scrollHeight - divScroll.clientHeight;\n\t      this.mensjGame.push(men);\n\t      if (atBottom) {\n\t        setTimeout(function () {\n\t          (0, _jquery2.default)('#' + idDiv).animate({\n\t            'scrollTop': (0, _jquery2.default)('#' + idDiv)[0].scrollHeight\n\t          }, 'slow');\n\t        }, 10);\n\t      }\n\t    },\n\t    loadUserConvert: function loadUserConvert(parms) {\n\t      var data = {\n\t        c: 'chat',\n\t        f: 'loadUserConvert',\n\t        data: parms\n\t      };\n\t      this.$socket.emit('event', data, function () {\n\t        var log = arguments.length <= 1 ? undefined : arguments[1];\n\t        this.mensjGame = log;\n\t        setTimeout(function () {\n\t          (0, _jquery2.default)('#chatConvertGame').animate({\n\t            'scrollTop': (0, _jquery2.default)('#chatConvertGame')[0].scrollHeight\n\t          }, 'slow');\n\t        }, 1000);\n\t      }.bind(this));\n\t    },\n\t    imageUrl: function imageUrl(name) {\n\t      return _lstorage2.default.get('serverDir') + '/uploads/' + name;\n\t    },\n\t    loadOtherUser: function loadOtherUser(otherUser, next) {\n\t      if (otherUser !== 'PC') {\n\t        _user2.default.get(this, otherUser).then(function (response) {\n\t          next(response.data);\n\t        }, function (response) {});\n\t      } else {\n\t        next({\n\t          image: 'avatar.png'\n\t        });\n\t      }\n\t    },\n\t    sendMensaje: function sendMensaje() {\n\t      if (this.chattext === '') {\n\t        return;\n\t      }\n\t      var thisUser = this.user.username;\n\t      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1;\n\t      if (this.userconvert.username || this.userconvert.nickname) {\n\t        otherUser = this.userconvert.username || this.userconvert.nickname;\n\t      }\n\t      if (otherUser === 'PC') {\n\t        return;\n\t      }\n\t      var men = {\n\t        body: this.chattext,\n\t        type: 'text',\n\t        public: false,\n\t        send: thisUser,\n\t        recibe: otherUser\n\t      };\n\t      var data = {\n\t        c: 'chat',\n\t        f: 'mensaje',\n\t        data: {\n\t          men: men\n\t        }\n\t      };\n\t      this.$socket.emit('event', data, function () {});\n\t      this.chattext = '';\n\t    },\n\t    countDown: function countDown() {\n\t      var seg = 0;\n\t      seg = this.time[this.turn] - 1;\n\t      if (seg <= 0) {\n\t        seg = 0;\n\t        clearInterval(timesColor[this.turn]);\n\t        if (this.active) {\n\t          var result = {\n\t            color: this.turn === 'black' ? 'white' : 'black',\n\t            motiv: 'timeout'\n\t          };\n\t          this.gameFinish(result);\n\t        }\n\t      }\n\t      this.boardGameCountDown(seg, this.turn);\n\t    },\n\t    countDownStart: function countDownStart() {\n\t      clearInterval(timesColor[this.turn]);\n\t      timesColor[this.turn] = setInterval(function () {\n\t        this.countDown();\n\t      }.bind(this), 1000);\n\t    },\n\t    chessToDests: function chessToDests(chess) {\n\t      var dests = {};\n\t      chess.SQUARES.forEach(function (s) {\n\t        var ms = chess.moves({ square: s, verbose: true });\n\t        if (ms.length) dests[s] = ms.map(function (m) {\n\t          return m.to;\n\t        });\n\t      });\n\t      return dests;\n\t    },\n\t    chessToColor: function chessToColor(chess) {\n\t      var t = chess.turn();\n\t      var turn = t === 'w' ? 'white' : 'black';\n\t      this.boardGameTurn(turn);\n\t      turn = this.user.username === this.board.u2 ? 'black' : 'white';\n\t      return turn;\n\t    },\n\t    onMove: function onMove(orig, dest) {\n\t      if (this.active) {\n\t        this.chess.move({\n\t          from: orig,\n\t          to: dest,\n\t          promotion: 'q'\n\t        });\n\t\n\t        var turn = this.chess.turn() === 'w' ? 'white' : 'black';\n\t        var data = {\n\t          c: 'board',\n\t          f: 'move',\n\t          data: {\n\t            event: 'move',\n\t            data: {\n\t              pgn: this.chess.pgn(),\n\t              idBoard: this.board._id,\n\t              turn: turn,\n\t              times: {},\n\t              move: {\n\t                from: orig,\n\t                to: dest\n\t              }\n\t            }\n\t          }\n\t        };\n\t        this.$socket.emit('event', data, function () {});\n\t      }\n\t    },\n\t    PcIngeniesMove: function PcIngeniesMove(move) {\n\t      var from = move & 0xFF;\n\t      var to = move >> 8 & 0xFF;\n\t      var sfrom = _garbochess2.default.FormatSquare(from);\n\t      var sto = _garbochess2.default.FormatSquare(to);\n\t      this.onMove(sfrom, sto);\n\t    },\n\t    pcMove: function pcMove(fen) {\n\t      _garbochess2.default.InitializeFromFen(fen);\n\t      _garbochess2.default.Search(this.PcIngeniesMove, 5, null);\n\t    },\n\t    isVsPc: function isVsPc(turn) {\n\t      if (turn === 'white' && this.board.u1 === 'PC' || turn === 'black' && this.board.u2 === 'PC') {\n\t        setTimeout(function () {\n\t          this.pcMove(this.chess.fen());\n\t        }.bind(this), 700);\n\t      }\n\t    },\n\t    isHumanVsPC: function isHumanVsPC() {\n\t      return this.board.u1 === 'PC' || this.board.u2 === 'PC';\n\t    },\n\t    changeStateGame: function changeStateGame(pgn) {\n\t      var move = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\t\n\t      if (move.from) {\n\t        this.chess.move({\n\t          from: move.from,\n\t          to: move.to,\n\t          promotion: 'q'\n\t        });\n\t        this.ground.move(move.from, move.to);\n\t      } else {\n\t        this.chess.load_pgn(pgn);\n\t      }\n\t      this.ground.set({\n\t        fen: this.chess.fen(),\n\t        turnColor: this.chessToColor(this.chess),\n\t        movable: {\n\t          color: this.chessToColor(this.chess),\n\t          dests: this.chessToDests(this.chess)\n\t        }\n\t      });\n\t      this.isVsPc(this.turn);\n\t    },\n\t    changeOrientation: function changeOrientation() {\n\t      this.orientation = this.orientation === 'white' ? 'black' : 'white';\n\t      this.ground.set({\n\t        orientation: this.orientation\n\t      });\n\t    },\n\t    changeStyle: function changeStyle(type) {\n\t      this.styles[type] = this.styles[type] + 1;\n\t      if (this.styles[type] > stylesBoard[type].length - 1) {\n\t        this.styles[type] = 0;\n\t      }\n\t      this.styleAdapter();\n\t      _lstorage2.default.set('styleBoard', this.styles);\n\t    },\n\t    styleAdapter: function styleAdapter() {\n\t      if (this.stylesBoard['board'][this.styles['board']] === 'light-wood-3d') {\n\t        document.getElementById('tablerochess').style.height = document.getElementById('tablerochess').clientWidth - document.getElementById('tablerochess').clientWidth * 6.25 / 100 + 'px';\n\t      } else {\n\t        document.getElementById('tablerochess').style.height = document.getElementById('tablerochess').clientWidth + 'px';\n\t      }\n\t    },\n\t    initGame: function initGame() {\n\t      this.boardGameMove('none');\n\t      var data = {\n\t        c: 'board',\n\t        f: 'getBoard',\n\t        data: _lstorage2.default.get('board')\n\t      };\n\t      this.$socket.emit('event', data, function () {\n\t        for (var _len = arguments.length, callbacks = Array(_len), _key = 0; _key < _len; _key++) {\n\t          callbacks[_key] = arguments[_key];\n\t        }\n\t\n\t        if (callbacks[0]) {\n\t          _lstorage2.default.del('board');\n\t          this.$route.router.go('/');\n\t          return;\n\t        }\n\t        var board = callbacks[1].board;\n\t        this.boardGameCountDown(callbacks[1].times.black, 'black');\n\t        this.boardGameCountDown(callbacks[1].times.white, 'white');\n\t        this.changeStateGame(board.pgn);\n\t        this.boardGameMove(board.pgn);\n\t        this.board = board;\n\t        this.styleAdapter();\n\t      }.bind(this));\n\t      var thisUser = this.user.username;\n\t      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1;\n\t      var parmsLoad = {\n\t        user: otherUser,\n\t        range: {\n\t          limit: 10,\n\t          skip: 0\n\t        }\n\t      };\n\t      this.loadUserConvert(parmsLoad);\n\t      this.loadOtherUser(otherUser, function (someUser) {\n\t        this.userWhite = thisUser === this.board.u1 ? this.user : someUser;\n\t        this.userBlack = thisUser === this.board.u2 ? this.user : someUser;\n\t        if (!this.userconvert.username && someUser.username) {\n\t          this.userconvert = someUser;\n\t        }\n\t      }.bind(this));\n\t    },\n\t    gameState: function gameState() {\n\t      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\t\n\t      if (state.motiv) {\n\t        var retorn = '';\n\t        retorn = state.motiv + ' ' + _vue2.default.t('game.wins') + ' ' + state.color;\n\t        if (state.motiv === 'timeout') {\n\t          this.boardGameCountDown(0, state.color === 'white' ? 'black' : 'white');\n\t        }\n\t        return retorn;\n\t      }\n\t      var gameOver = this.chess.game_over();\n\t      if (this.chess.in_check() && !gameOver) {\n\t        return _vue2.default.t('game.check') + ' ' + _vue2.default.t('home.createPart.' + this.turn);\n\t      }\n\t      if (gameOver) {\n\t        if (this.chess.in_checkmate()) {\n\t          var result = {\n\t            color: this.turn === 'white' ? 'black' : 'white',\n\t            motiv: 'checkmate'\n\t          };\n\t          this.gameFinish(result);\n\t          return;\n\t        }\n\t        if (this.chess.in_draw()) {\n\t          var _result = {\n\t            color: 'draw',\n\t            motiv: 'drawn_position'\n\t          };\n\t          this.gameFinish(_result);\n\t          return;\n\t        }\n\t        if (this.chess.in_stalemate()) {\n\t          var _result2 = {\n\t            color: this.turn === 'white' ? 'black' : 'white',\n\t            motiv: 'stalemate'\n\t          };\n\t          this.gameFinish(_result2);\n\t          return;\n\t        }\n\t        if (this.chess.in_threefold_repetition()) {\n\t          var _result3 = {\n\t            color: 'draw',\n\t            motiv: 'threefold_repetition'\n\t          };\n\t          this.gameFinish(_result3);\n\t          return;\n\t        }\n\t        if (this.chess.insufficient_material()) {\n\t          var _result4 = {\n\t            color: 'draw',\n\t            motiv: 'insufficient_material'\n\t          };\n\t          this.gameFinish(_result4);\n\t          return;\n\t        }\n\t      }\n\t      return _vue2.default.t('game.turnColor') + ' ' + _vue2.default.t('home.createPart.' + this.turn);\n\t    },\n\t    rendir: function rendir() {\n\t      var result = {\n\t        color: this.board.u1 === this.user.username ? 'black' : 'white',\n\t        motiv: 'Пользователь сдался.'\n\t      };\n\t      this.gameFinish(result);\n\t    },\n\t    gameFinish: function gameFinish(result) {\n\t      if (!this.active) {\n\t        return;\n\t      }\n\t      var data = {\n\t        c: 'board',\n\t        f: 'gameFinish',\n\t        data: {\n\t          idBoard: this.board._id,\n\t          result: result\n\t        }\n\t      };\n\t      this.$socket.emit('event', data, function () {});\n\t    },\n\t    stateFinishGame: function stateFinishGame(state) {\n\t      this.active = false;\n\t      this.state = this.gameState(state.result);\n\t      _lstorage2.default.del('board');\n\t      _lstorage2.default.del('userconvert');\n\t      this.ground.stop();\n\t      clearInterval(timesColor.black);\n\t      clearInterval(timesColor.white);\n\t    }\n\t  },\n\t  created: function created() {\n\t    _garbochess2.default.ResetGame();\n\t    setTimeout(function () {\n\t      this.orientation = this.user.username === this.board.u2 ? 'black' : 'white';\n\t      this.ground = (0, _chessground2.default)(document.getElementById('tablerochess'), {\n\t        viewOnly: false,\n\t        turnColor: 'white',\n\t        animation: {\n\t          duration: 300\n\t        },\n\t        movable: {\n\t          free: false,\n\t          premove: true,\n\t          dests: this.chessToDests(this.chess),\n\t          events: {\n\t            after: this.onMove\n\t          }\n\t        },\n\t        drawable: {\n\t          enabled: true\n\t        },\n\t        showDests: true,\n\t        orientation: this.orientation\n\t      });\n\t\n\t      this.styleAdapter();\n\t\n\t      this.initGame();\n\t      (0, _jquery2.default)('html, body').animate({\n\t        scrollTop: (0, _jquery2.default)('#tablerochess').offset().top\n\t      }, 500);\n\t    }.bind(this), 10);\n\t  },\n\t\n\t  watch: {\n\t    turn: function turn(newVal, oldVal) {\n\t      if (this.active) {\n\t        clearInterval(timesColor[oldVal]);\n\t        this.countDownStart();\n\t      }\n\t    },\n\t    pgn: function pgn(newVal, oldVal) {\n\t      this.state = this.gameState();\n\t      this.history = this.chess.history({ verbose: true });\n\t    },\n\t    userconvert: function userconvert(newVal, oldVal) {\n\t      _lstorage2.default.set('userconvert', newVal);\n\t    }\n\t  }\n\t};\n\n/***/ }),\n\n/***/ 235:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _lstorage = __webpack_require__(2);\n\t\n\tvar _lstorage2 = _interopRequireDefault(_lstorage);\n\t\n\tvar _getters = __webpack_require__(40);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  name: 'userCard',\n\t  props: {\n\t    color: {\n\t      type: String\n\t    },\n\t    username: {\n\t      type: Object\n\t    }\n\t  },\n\t  vuex: {\n\t    getters: {\n\t      turn: _getters.getGameTurn,\n\t      time: _getters.getGameTimesUsers\n\t    }\n\t  },\n\t  methods: {\n\t    pad: function pad(n, lenght) {\n\t      return ('0' + n).slice(lenght);\n\t    },\n\t    imageUrl: function imageUrl(name) {\n\t      return _lstorage2.default.get('serverDir') + '/uploads/' + name;\n\t    }\n\t  },\n\t  filters: {\n\t    boardTime: function boardTime(s) {\n\t      var min = parseInt(s / 60);\n\t      var segs = s % 60;\n\t      return this.pad(min, -2) + ':' + this.pad(segs, -2);\n\t    }\n\t  },\n\t  watch: {},\n\t  created: function created() {}\n\t};\n\n/***/ }),\n\n/***/ 346:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \" <div class=\\\"col s12 m12 l12 card-panel\\\" v-bind:class=\\\"[turn === color ? 'userTurn' : '']\\\"> <div class=\\\"col s4 m4 l3\\\"> <h4 class=flat-text-header>{{ time[color] | boardTime }}</h4> </div> <div class=\\\"col s4 m4 l6\\\"> <p class=flat-text-header style=\\\"float: right\\\">{{ username.username || 'PC'}}</p> </div> <div class=\\\"col s4 m4 l3\\\" v-show=username.image> <img alt=\\\"\\\" v-bind:src=imageUrl(username.image) class=\\\"avatar avatar-50 photo avatar-default circle\\\" height=60 width=60> </div> </div> \";\n\n/***/ }),\n\n/***/ 358:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"col s12\\\"> <md-modal id=usersConnect> <h4 style=\\\"text-align: center\\\">Связанные пользователи</h4> <md-input name=search :value.sync=finduser> Поиск пользователя </md-input> <md-collection-list class=\\\"col s12 m12 l12\\\"> <md-collection-list-item class=avatar v-if=\\\"user.username !== u.nickname\\\" v-for=\\\"u in usersConnect | filterBy finduser\\\" @click=userToConversation(u)> <img v-bind:src=imageUrl(u.image) alt=\\\"\\\" class=circle> <span class=title>{{u.nickname}}</span> <a slot=secondary-content href=javascript:void(0)> <md-icon>grade</md-icon> </a> </md-collection-list-item> </md-collection-list> </md-modal> <div class=\\\"col s12 m12 l3\\\"> <p style=\\\"text-align: center\\\">{{ $t(\\\"game.chat\\\") }}</p> <div style=\\\"height: 65vh;overflow: auto\\\" id=chatConvertGame> <body-men :mens=mensjGame :dir-server=dirServer :user=user></body-men> </div> <form v-on:submit.prevent=sendMensaje()> <md-input name=text :value.sync=chattext class=\\\"col s9 m9 l10\\\"> {{ $t(\\\"game.text\\\") }} </md-input> <md-btn @mouseover=\\\"tooltip($event, 'Отправить', 'top')\\\" class=\\\"btn waves-effect waves-light col s3 m3 l2 send-btn\\\" type=submit> S </md-btn> <md-collection-list class=\\\"col s12 m12 l12\\\" @click=selectUserToConversation v-if=\\\"userconvert.username || userconvert.nickname\\\"> <md-collection-list-item class=avatar> <img v-bind:src=imageUrl(userconvert.image) alt=\\\"\\\" class=circle> <span class=title>{{userconvert.nickname || userconvert.username}}</span> <a slot=secondary-content href=javascript:void(0)> <md-icon>grade</md-icon> </a> </md-collection-list-item> </md-collection-list> <md-btn v-else @mouseover=\\\"tooltip($event, $t('game.chatConverTooltip'), 'top')\\\" class=\\\"waves-effect waves-light col s12 m12 l12\\\" @click=selectUserToConversation> {{ $t(\\\"game.chatConver\\\") }} ... </md-btn> </form> </div> <div class=\\\"col s12 m12 l6\\\"> <div id=tablerochess style=\\\"width: 100%;height: 600px\\\" class=\\\"{{ stylesBoard['board'][styles['board']] }} chessground vuejs {{ stylesBoard['pieces'][styles['pieces']] }}\\\"></div> </div> <div class=\\\"col s12 m12 l3\\\"> <user-card :color=\\\"'white'\\\" :username=userWhite v-if=\\\"this.orientation === 'black'\\\"></user-card> <user-card :color=\\\"'black'\\\" :username=userBlack v-else></user-card> <h6 class=\\\"flat-text-header hello\\\" style=\\\"text-align: center\\\">{{ state }}</h6> <div class=\\\"col s12 m12 l12\\\"> <board-history :history=history :active=active :humanvspc=isHumanVsPC></board-history> </div> <div class=\\\"col s12 m12 l12\\\"> <md-btn @mouseover=\\\"tooltip($event, 'Фигуры', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('pieces')\\\"> P </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Доска', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('board')\\\"> B </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Сдаться', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=rendir()> {{ $t(\\\"game.rend\\\") }} </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Перевернуть', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=changeOrientation> {{ $t(\\\"game.invert\\\") }} </md-btn> </div> <user-card :color=\\\"'black'\\\" :username=userBlack v-if=\\\"this.orientation !== 'white'\\\"></user-card> <user-card :color=\\\"'white'\\\" :username=userWhite v-else></user-card> </div> <style scoped> .menText p {\\r\\n            text-align: justify;\\r\\n            -moz-hyphens: auto;\\r\\n            word-wrap: break-word;\\r\\n        }\\r\\n\\r\\n        .userTurn {\\r\\n            background-color: #D8B980;\\r\\n        }\\r\\n\\r\\n        .send-btn {\\r\\n            height: 60px;\\r\\n        }\\r\\n\\r\\n        .chessground.tiny {\\r\\n            width: 225px;\\r\\n            height: 225px;\\r\\n        }\\r\\n\\r\\n        .chessground.small {\\r\\n            width: 300px;\\r\\n            height: 300px;\\r\\n        }\\r\\n\\r\\n        .chessground.normal {\\r\\n            width: 512px;\\r\\n            height: 512px;\\r\\n        }\\r\\n\\r\\n        .cg-board-wrap svg {\\r\\n            opacity: 0.6;\\r\\n            overflow: hidden;\\r\\n            position: relative;\\r\\n            top: 0px;\\r\\n            left: 0px;\\r\\n            width: 100%;\\r\\n            height: 100%;\\r\\n            pointer-events: none;\\r\\n            z-index: 2;\\r\\n        }\\r\\n\\r\\n        .cg-board-wrap svg * {\\r\\n            transition: 0.35s;\\r\\n        } </style> </div>\";\n\n/***/ }),\n\n/***/ 366:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__vue_script__ = __webpack_require__(234)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ }),\n\n/***/ 367:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\tvar __vue_styles__ = {}\n\t__vue_script__ = __webpack_require__(235)\n\t__vue_template__ = __webpack_require__(346)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\n\tif (__vue_template__) {\n\t__vue_options__.template = __vue_template__\n\t}\n\tif (!__vue_options__.computed) __vue_options__.computed = {}\n\tObject.keys(__vue_styles__).forEach(function (key) {\n\tvar module = __vue_styles__[key]\n\t__vue_options__.computed[key] = function () { return module }\n\t})\n\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/1.d1707e02195e4c0a9c4d.js","<script>\r\nimport Vue from 'vue'\r\nimport Chessground from 'chessground'\r\nimport MiChess from 'chess.js'\r\nimport Garbochess from 'garbochess'\r\nimport UserCard from './userCard'\r\nimport BoardHistory from './boardHistory'\r\nimport BodyMen from '../home/bodyMen'\r\nimport Store from '../../services/lstorage'\r\nimport UserService from '../../services/user'\r\nimport { boardGameMove, boardGameTurn, boardGameCountDown } from '../../vuex/actions'\r\nimport { getGamePgn, getGameTurn, getGameTimesUsers } from '../../vuex/getters'\r\nimport Jquery from 'jquery'\r\nimport tooltip from 'vue-material-components'\r\nvar timesColor = {\r\n  white: 1,\r\n  black: 1\r\n}\r\nvar stylesBoard = {\r\n  board: ['light-wood-3d', 'blue', 'wood', 'marble'],\r\n  pieces: ['merida', 'staunton', 'pirouetti', 'cburnett']\r\n}\r\nexport default {\r\n  template: require('./template.html'),\r\n  route: {\r\n    canActivate: function (transition) {\r\n      return UserService.user_acces('authenticate') && Store.get('board')._id ? true : transition.redirect('home')\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      chattext: '',\r\n      mensjGame: [],\r\n      userWhite: {},\r\n      userBlack: {},\r\n      user: UserService.getUser(),\r\n      usersConnect: [],\r\n      userconvert: Store.get('userconvert', {}),\r\n      ground: 0,\r\n      fen: 'none',\r\n      orientation: 'white',\r\n      history: [],\r\n      styleboard: true,\r\n      active: true,\r\n      state: '',\r\n      chess: new MiChess(),\r\n      stylesBoard: stylesBoard,\r\n      styles: Store.get('styleBoard',\r\n        {\r\n          board: 1,\r\n          pieces: 0\r\n        }),\r\n      board: Store.get('board'),\r\n      dirServer: Store.get('serverDir')\r\n    }\r\n  },\r\n  mixins: [\r\n    tooltip\r\n  ],\r\n  props: {},\r\n  components: {\r\n    UserCard,\r\n    BoardHistory,\r\n    BodyMen\r\n  },\r\n  vuex: {\r\n    actions: {\r\n      boardGameMove,\r\n      boardGameTurn,\r\n      boardGameCountDown\r\n    },\r\n    getters: {\r\n      pgn: getGamePgn,\r\n      turn: getGameTurn,\r\n      time: getGameTimesUsers\r\n    }\r\n  },\r\n  events: {\r\n    move (board) {\r\n      if (this.active) {\r\n        this.boardGameMove(board.pgn)\r\n      }\r\n      this.changeStateGame(board.pgn, board.move)\r\n      if (board.times) {\r\n        // console.log(board.times)\r\n        this.boardGameCountDown(board.times.black, 'black')\r\n        this.boardGameCountDown(board.times.white, 'white')\r\n      }\r\n    },\r\n    gameFinish (dataResult) {\r\n      this.stateFinishGame(dataResult)\r\n    },\r\n    mensaje (data) {\r\n      this.recibeMensaje(data.men)\r\n    }\r\n  },\r\n  methods: {\r\n    selectUserToConversation () {\r\n      const data = {\r\n        c: 'chat',\r\n        f: 'username',\r\n        data: {\r\n          user: this.user\r\n        }\r\n      }\r\n      setTimeout(function () {\r\n        this.$socket.emit('event', data, function (...callbacks) {\r\n          this.usersConnect = callbacks[1]\r\n          this.$broadcast('modal::open', 'usersConnect')\r\n        }.bind(this))\r\n      }.bind(this), 2)\r\n    },\r\n    userToConversation (user) {\r\n      this.userconvert = user\r\n      this.$broadcast('modal::close', 'some', 'usersConnect')\r\n    },\r\n    recibeMensaje (men) {\r\n      var idDiv = 'chatConvertGame'\r\n      var divScroll = document.getElementById(idDiv)\r\n      var atBottom = divScroll.scrollTop >= divScroll.scrollHeight - divScroll.clientHeight\r\n      this.mensjGame.push(men)\r\n      if (atBottom) {\r\n        setTimeout(function () {\r\n          Jquery('#' + idDiv).animate({\r\n            'scrollTop': Jquery('#' + idDiv)[0].scrollHeight\r\n          }, 'slow')\r\n        }, 10)\r\n      }\r\n    },\r\n    loadUserConvert (parms) {\r\n      var data = {\r\n        c: 'chat',\r\n        f: 'loadUserConvert',\r\n        data: parms\r\n      }\r\n      this.$socket.emit('event', data, function (...callbacks) {\r\n        var log = callbacks[1]\r\n        this.mensjGame = log\r\n        setTimeout(function () {\r\n          Jquery('#chatConvertGame').animate({\r\n            'scrollTop': Jquery('#chatConvertGame')[0].scrollHeight\r\n          }, 'slow')\r\n        }, 1000)\r\n      }.bind(this))\r\n    },\r\n    imageUrl (name) {\r\n      return Store.get('serverDir') + '/uploads/' + name\r\n    },\r\n    loadOtherUser (otherUser, next) {\r\n      if (otherUser !== 'PC') {\r\n        UserService.get(this, otherUser).then(function (response) {\r\n          next(response.data)\r\n        }, function (response) {\r\n          // window.alert('mal')\r\n        })\r\n      } else {\r\n        next({\r\n          image: 'avatar.png'\r\n        })\r\n      }\r\n    },\r\n    sendMensaje () {\r\n      if (this.chattext === '') {\r\n        return\r\n      }\r\n      var thisUser = this.user.username\r\n      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1\r\n      if (this.userconvert.username || this.userconvert.nickname) {\r\n        otherUser = this.userconvert.username || this.userconvert.nickname\r\n      }\r\n      if (otherUser === 'PC') {\r\n        return\r\n      }\r\n      var men = {\r\n        body: this.chattext,\r\n        type: 'text',\r\n        public: false,\r\n        send: thisUser,\r\n        recibe: otherUser\r\n      }\r\n      var data = {\r\n        c: 'chat',\r\n        f: 'mensaje',\r\n        data: {\r\n          men: men\r\n        }\r\n      }\r\n      this.$socket.emit('event', data, function (...callbacks) {\r\n        // console.log(callbacks)\r\n      })\r\n      this.chattext = ''\r\n    },\r\n    countDown () {\r\n      var seg = 0\r\n      seg = this.time[this.turn] - 1\r\n      if (seg <= 0) {\r\n        seg = 0\r\n        clearInterval(timesColor[this.turn])\r\n        if (this.active) {\r\n          const result = {\r\n            color: this.turn === 'black' ? 'white' : 'black',\r\n            motiv: 'timeout'\r\n          }\r\n          this.gameFinish(result)\r\n        }\r\n      }\r\n      this.boardGameCountDown(seg, this.turn)\r\n    },\r\n    countDownStart () {\r\n      clearInterval(timesColor[this.turn])\r\n      timesColor[this.turn] = setInterval(function () {\r\n        this.countDown()\r\n      }.bind(this), 1000)\r\n    },\r\n    chessToDests (chess) {\r\n      var dests = {}\r\n      chess.SQUARES.forEach(function (s) {\r\n        var ms = chess.moves({square: s, verbose: true})\r\n        if (ms.length) dests[s] = ms.map(function (m) { return m.to })\r\n      })\r\n      return dests\r\n    },\r\n    chessToColor (chess) {\r\n      var t = chess.turn()\r\n      var turn = (t === 'w') ? 'white' : 'black'\r\n      this.boardGameTurn(turn)\r\n      turn = this.user.username === this.board.u2 ? 'black' : 'white'\r\n      return turn\r\n    },\r\n    onMove (orig, dest) {\r\n      // comprobar si el juego esta activo\r\n      if (this.active) {\r\n        this.chess.move({\r\n          from: orig,\r\n          to: dest,\r\n          promotion: 'q'\r\n        })\r\n        // comunicacion con servidor\r\n        var turn = (this.chess.turn() === 'w') ? 'white' : 'black'\r\n        var data = {\r\n          c: 'board',\r\n          f: 'move',\r\n          data: {\r\n            event: 'move',\r\n            data: {\r\n              pgn: this.chess.pgn(),\r\n              idBoard: this.board._id,\r\n              turn: turn,\r\n              times: {},\r\n              move: {\r\n                from: orig,\r\n                to: dest\r\n              }\r\n            }\r\n          }\r\n        }\r\n        this.$socket.emit('event', data, function (...callbacks) {\r\n          // console.log(callbacks)\r\n        })\r\n      }\r\n    },\r\n    PcIngeniesMove (move) {\r\n      var from = move & 0xFF\r\n      var to = (move >> 8) & 0xFF\r\n      var sfrom = Garbochess.FormatSquare(from)\r\n      var sto = Garbochess.FormatSquare(to)\r\n      this.onMove(sfrom, sto)\r\n    },\r\n    pcMove (fen) {\r\n      Garbochess.InitializeFromFen(fen)\r\n      Garbochess.Search(this.PcIngeniesMove, 5, null)\r\n    },\r\n    isVsPc (turn) {\r\n      if ((turn === 'white' && this.board.u1 === 'PC') || (turn === 'black' && this.board.u2 === 'PC')) {\r\n        setTimeout(function () {\r\n          this.pcMove(this.chess.fen())\r\n        }.bind(this), 700)\r\n      }\r\n    },\r\n    isHumanVsPC () {\r\n      return (this.board.u1 === 'PC') || (this.board.u2 === 'PC')\r\n    },\r\n    changeStateGame (pgn, move = {}) {\r\n      // show move board\r\n      if (move.from) {\r\n        this.chess.move({\r\n          from: move.from,\r\n          to: move.to,\r\n          promotion: 'q'\r\n        })\r\n        this.ground.move(move.from, move.to)\r\n        // this.ground.playPremove()\r\n      } else {\r\n        // load from pgn\r\n        this.chess.load_pgn(pgn)\r\n      }\r\n      this.ground.set({\r\n        fen: this.chess.fen(),\r\n        turnColor: this.chessToColor(this.chess),\r\n        movable: {\r\n          color: this.chessToColor(this.chess),\r\n          dests: this.chessToDests(this.chess)\r\n        }\r\n      })\r\n      this.isVsPc(this.turn)\r\n    },\r\n    changeOrientation () {\r\n      this.orientation = this.orientation === 'white' ? 'black' : 'white'\r\n      this.ground.set({\r\n        orientation: this.orientation\r\n      })\r\n    },\r\n    changeStyle (type) {\r\n      this.styles[type] = this.styles[type] + 1\r\n      if (this.styles[type] > stylesBoard[type].length - 1) {\r\n        this.styles[type] = 0\r\n      }\r\n      this.styleAdapter()\r\n      Store.set('styleBoard', this.styles)\r\n    },\r\n    styleAdapter () {\r\n      if (this.stylesBoard['board'][this.styles['board']] === 'light-wood-3d') {\r\n        document.getElementById('tablerochess').style.height = (document.getElementById('tablerochess').clientWidth - (document.getElementById('tablerochess').clientWidth * 6.25 / 100)) + 'px'\r\n      } else {\r\n        document.getElementById('tablerochess').style.height = document.getElementById('tablerochess').clientWidth + 'px'\r\n      }\r\n    },\r\n    initGame () {\r\n      // inicializando tiempos\r\n      this.boardGameMove('none')\r\n      var data = {\r\n        c: 'board',\r\n        f: 'getBoard',\r\n        data: Store.get('board')\r\n      }\r\n      this.$socket.emit('event', data, function (...callbacks) {\r\n        if (callbacks[0]) {\r\n          Store.del('board')\r\n          this.$route.router.go('/')\r\n          return\r\n        }\r\n        var board = callbacks[1].board\r\n        this.boardGameCountDown(callbacks[1].times.black, 'black')\r\n        this.boardGameCountDown(callbacks[1].times.white, 'white')\r\n        this.changeStateGame(board.pgn)\r\n        this.boardGameMove(board.pgn)\r\n        this.board = board\r\n        this.styleAdapter()\r\n      }.bind(this))\r\n      var thisUser = this.user.username\r\n      var otherUser = this.board.u1 === thisUser ? this.board.u2 : this.board.u1\r\n      var parmsLoad = {\r\n        user: otherUser,\r\n        range: {\r\n          limit: 10,\r\n          skip: 0\r\n        }\r\n      }\r\n      this.loadUserConvert(parmsLoad)\r\n      this.loadOtherUser(otherUser, function (someUser) {\r\n        this.userWhite = thisUser === this.board.u1 ? this.user : someUser\r\n        this.userBlack = thisUser === this.board.u2 ? this.user : someUser\r\n        if (!this.userconvert.username && someUser.username) {\r\n          this.userconvert = someUser\r\n        }\r\n      }.bind(this))\r\n    },\r\n    gameState (state = {}) {\r\n      if (state.motiv) {\r\n        var retorn = ''\r\n        retorn = state.motiv + ' ' + Vue.t('game.wins') + ' ' + state.color\r\n        if (state.motiv === 'timeout') {\r\n          this.boardGameCountDown(0, state.color === 'white' ? 'black' : 'white')\r\n        }\r\n        return retorn\r\n      }\r\n      var gameOver = this.chess.game_over()\r\n      if (this.chess.in_check() && !gameOver) {\r\n        return Vue.t('game.check') + ' ' + Vue.t('home.createPart.' + this.turn)\r\n      }\r\n      if (gameOver) {\r\n        // is game over?\r\n        if (this.chess.in_checkmate()) {\r\n          const result = {\r\n            color: this.turn === 'white' ? 'black' : 'white',\r\n            motiv: 'checkmate'\r\n          }\r\n          this.gameFinish(result)\r\n          return\r\n        }\r\n        if (this.chess.in_draw()) {\r\n          const result = {\r\n            color: 'draw',\r\n            motiv: 'drawn_position'\r\n          }\r\n          this.gameFinish(result)\r\n          return\r\n        }\r\n        if (this.chess.in_stalemate()) {\r\n          const result = {\r\n            color: this.turn === 'white' ? 'black' : 'white',\r\n            motiv: 'stalemate'\r\n          }\r\n          this.gameFinish(result)\r\n          return\r\n        }\r\n        if (this.chess.in_threefold_repetition()) {\r\n          const result = {\r\n            color: 'draw',\r\n            motiv: 'threefold_repetition'\r\n          }\r\n          this.gameFinish(result)\r\n          return\r\n        }\r\n        if (this.chess.insufficient_material()) {\r\n          const result = {\r\n            color: 'draw',\r\n            motiv: 'insufficient_material'\r\n          }\r\n          this.gameFinish(result)\r\n          return\r\n        }\r\n      }\r\n      return Vue.t('game.turnColor') + ' ' + Vue.t('home.createPart.' + this.turn)\r\n    },\r\n    rendir () {\r\n      const result = {\r\n        color: this.board.u1 === this.user.username ? 'black' : 'white',\r\n        motiv: 'Пользователь сдался.'\r\n      }\r\n      this.gameFinish(result)\r\n    },\r\n    gameFinish (result) {\r\n      if (!this.active) {\r\n        return\r\n      }\r\n      var data = {\r\n        c: 'board',\r\n        f: 'gameFinish',\r\n        data: {\r\n          idBoard: this.board._id,\r\n          result: result\r\n        }\r\n      }\r\n      this.$socket.emit('event', data, function (...callbacks) {\r\n        // console.log(callbacks)\r\n      })\r\n    },\r\n    stateFinishGame (state) {\r\n      this.active = false\r\n      this.state = this.gameState(state.result)\r\n      Store.del('board')\r\n      Store.del('userconvert')\r\n      this.ground.stop()\r\n      clearInterval(timesColor.black)\r\n      clearInterval(timesColor.white)\r\n    }\r\n  },\r\n  created () {\r\n    Garbochess.ResetGame()\r\n    setTimeout(function () {\r\n      this.orientation = this.user.username === this.board.u2 ? 'black' : 'white'\r\n      this.ground = Chessground(document.getElementById('tablerochess'), {\r\n        viewOnly: false,\r\n        turnColor: 'white',\r\n        animation: {\r\n          duration: 300\r\n        },\r\n        movable: {\r\n          free: false,\r\n          premove: true,\r\n          dests: this.chessToDests(this.chess),\r\n          events: {\r\n            after: this.onMove\r\n          }\r\n        },\r\n        drawable: {\r\n          enabled: true\r\n        },\r\n        showDests: true,\r\n        orientation: this.orientation\r\n      })\r\n      // estableciendo razones de altura y ancho\r\n      this.styleAdapter()\r\n      // actualizando juego\r\n      this.initGame()\r\n      Jquery('html, body').animate({\r\n        scrollTop: Jquery('#tablerochess').offset().top\r\n      }, 500)\r\n    }.bind(this), 10)\r\n  },\r\n  watch: {\r\n    turn (newVal, oldVal) {\r\n      if (this.active) {\r\n        clearInterval(timesColor[oldVal])\r\n        this.countDownStart()\r\n      }\r\n    },\r\n    pgn (newVal, oldVal) {\r\n      this.state = this.gameState()\r\n      this.history = this.chess.history({ verbose: true })\r\n    },\r\n    userconvert (newVal, oldVal) {\r\n      Store.set('userconvert', newVal)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// index.vue?78ea1f5a","<template>\r\n  <div class=\"col s12 m12 l12 card-panel\" v-bind:class=\"[turn === color ? 'userTurn' : '']\">\r\n    <div class=\"col s4 m4 l3\">\r\n      <h4 class=\"flat-text-header\">{{ time[color] | boardTime }}</h4>\r\n    </div>\r\n    <div class=\"col s4 m4 l6\">\r\n      <p class=\"flat-text-header\" style=\"float: right\">{{ username.username || 'PC'}}</p>\r\n    </div>\r\n    <div class=\"col s4 m4 l3\" v-show=\"username.image\">\r\n      <img alt=\"\" v-bind:src=\"imageUrl(username.image)\" class=\"avatar avatar-50 photo avatar-default circle\" height=\"60\"\r\n           width=\"60\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Store from '../../services/lstorage'\r\nimport { getGameTurn, getGameTimesUsers } from '../../vuex/getters'\r\nexport default {\r\n  name: 'userCard',\r\n  props: {\r\n    color: {\r\n      type: String\r\n    },\r\n    username: {\r\n      type: Object\r\n    }\r\n  },\r\n  vuex: {\r\n    getters: {\r\n      turn: getGameTurn,\r\n      time: getGameTimesUsers\r\n    }\r\n  },\r\n  methods: {\r\n    pad (n, lenght) {\r\n      return ('0' + n).slice(lenght)\r\n    },\r\n    imageUrl (name) {\r\n      return Store.get('serverDir') + '/uploads/' + name\r\n    }\r\n  },\r\n  filters: {\r\n    boardTime (s) {\r\n      var min = parseInt(s / 60)\r\n      var segs = s % 60\r\n      return this.pad(min, -2) + ':' + this.pad(segs, -2)\r\n    }\r\n  },\r\n  watch: {},\r\n  created () {}\r\n}\r\n</script>\n\n\n// WEBPACK FOOTER //\n// userCard.vue?b55595f0","module.exports = \" <div class=\\\"col s12 m12 l12 card-panel\\\" v-bind:class=\\\"[turn === color ? 'userTurn' : '']\\\"> <div class=\\\"col s4 m4 l3\\\"> <h4 class=flat-text-header>{{ time[color] | boardTime }}</h4> </div> <div class=\\\"col s4 m4 l6\\\"> <p class=flat-text-header style=\\\"float: right\\\">{{ username.username || 'PC'}}</p> </div> <div class=\\\"col s4 m4 l3\\\" v-show=username.image> <img alt=\\\"\\\" v-bind:src=imageUrl(username.image) class=\\\"avatar avatar-50 photo avatar-default circle\\\" height=60 width=60> </div> </div> \";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/game/userCard.vue\n// module id = 346\n// module chunks = 1","module.exports = \"<div class=\\\"col s12\\\"> <md-modal id=usersConnect> <h4 style=\\\"text-align: center\\\">Связанные пользователи</h4> <md-input name=search :value.sync=finduser> Поиск пользователя </md-input> <md-collection-list class=\\\"col s12 m12 l12\\\"> <md-collection-list-item class=avatar v-if=\\\"user.username !== u.nickname\\\" v-for=\\\"u in usersConnect | filterBy finduser\\\" @click=userToConversation(u)> <img v-bind:src=imageUrl(u.image) alt=\\\"\\\" class=circle> <span class=title>{{u.nickname}}</span> <a slot=secondary-content href=javascript:void(0)> <md-icon>grade</md-icon> </a> </md-collection-list-item> </md-collection-list> </md-modal> <div class=\\\"col s12 m12 l3\\\"> <p style=\\\"text-align: center\\\">{{ $t(\\\"game.chat\\\") }}</p> <div style=\\\"height: 65vh;overflow: auto\\\" id=chatConvertGame> <body-men :mens=mensjGame :dir-server=dirServer :user=user></body-men> </div> <form v-on:submit.prevent=sendMensaje()> <md-input name=text :value.sync=chattext class=\\\"col s9 m9 l10\\\"> {{ $t(\\\"game.text\\\") }} </md-input> <md-btn @mouseover=\\\"tooltip($event, 'Отправить', 'top')\\\" class=\\\"btn waves-effect waves-light col s3 m3 l2 send-btn\\\" type=submit> S </md-btn> <md-collection-list class=\\\"col s12 m12 l12\\\" @click=selectUserToConversation v-if=\\\"userconvert.username || userconvert.nickname\\\"> <md-collection-list-item class=avatar> <img v-bind:src=imageUrl(userconvert.image) alt=\\\"\\\" class=circle> <span class=title>{{userconvert.nickname || userconvert.username}}</span> <a slot=secondary-content href=javascript:void(0)> <md-icon>grade</md-icon> </a> </md-collection-list-item> </md-collection-list> <md-btn v-else @mouseover=\\\"tooltip($event, $t('game.chatConverTooltip'), 'top')\\\" class=\\\"waves-effect waves-light col s12 m12 l12\\\" @click=selectUserToConversation> {{ $t(\\\"game.chatConver\\\") }} ... </md-btn> </form> </div> <div class=\\\"col s12 m12 l6\\\"> <div id=tablerochess style=\\\"width: 100%;height: 600px\\\" class=\\\"{{ stylesBoard['board'][styles['board']] }} chessground vuejs {{ stylesBoard['pieces'][styles['pieces']] }}\\\"></div> </div> <div class=\\\"col s12 m12 l3\\\"> <user-card :color=\\\"'white'\\\" :username=userWhite v-if=\\\"this.orientation === 'black'\\\"></user-card> <user-card :color=\\\"'black'\\\" :username=userBlack v-else></user-card> <h6 class=\\\"flat-text-header hello\\\" style=\\\"text-align: center\\\">{{ state }}</h6> <div class=\\\"col s12 m12 l12\\\"> <board-history :history=history :active=active :humanvspc=isHumanVsPC></board-history> </div> <div class=\\\"col s12 m12 l12\\\"> <md-btn @mouseover=\\\"tooltip($event, 'Фигуры', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('pieces')\\\"> P </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Доска', 'top')\\\" class=\\\"waves-effect waves-light col s2 m2 l2\\\" @click=\\\"changeStyle('board')\\\"> B </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Сдаться', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=rendir()> {{ $t(\\\"game.rend\\\") }} </md-btn> <md-btn @mouseover=\\\"tooltip($event, 'Перевернуть', 'top')\\\" class=\\\"waves-effect waves-light col s4 m4 l4\\\" @click=changeOrientation> {{ $t(\\\"game.invert\\\") }} </md-btn> </div> <user-card :color=\\\"'black'\\\" :username=userBlack v-if=\\\"this.orientation !== 'white'\\\"></user-card> <user-card :color=\\\"'white'\\\" :username=userWhite v-else></user-card> </div> <style scoped> .menText p {\\r\\n            text-align: justify;\\r\\n            -moz-hyphens: auto;\\r\\n            word-wrap: break-word;\\r\\n        }\\r\\n\\r\\n        .userTurn {\\r\\n            background-color: #D8B980;\\r\\n        }\\r\\n\\r\\n        .send-btn {\\r\\n            height: 60px;\\r\\n        }\\r\\n\\r\\n        .chessground.tiny {\\r\\n            width: 225px;\\r\\n            height: 225px;\\r\\n        }\\r\\n\\r\\n        .chessground.small {\\r\\n            width: 300px;\\r\\n            height: 300px;\\r\\n        }\\r\\n\\r\\n        .chessground.normal {\\r\\n            width: 512px;\\r\\n            height: 512px;\\r\\n        }\\r\\n\\r\\n        .cg-board-wrap svg {\\r\\n            opacity: 0.6;\\r\\n            overflow: hidden;\\r\\n            position: relative;\\r\\n            top: 0px;\\r\\n            left: 0px;\\r\\n            width: 100%;\\r\\n            height: 100%;\\r\\n            pointer-events: none;\\r\\n            z-index: 2;\\r\\n        }\\r\\n\\r\\n        .cg-board-wrap svg * {\\r\\n            transition: 0.35s;\\r\\n        } </style> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/game/template.html\n// module id = 358\n// module chunks = 1","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./index.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/game/index.vue\n// module id = 366\n// module chunks = 1","var __vue_script__, __vue_template__\nvar __vue_styles__ = {}\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!../../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./userCard.vue\")\n__vue_template__ = require(\"!!vue-html-loader!../../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./userCard.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nvar __vue_options__ = typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports\nif (__vue_template__) {\n__vue_options__.template = __vue_template__\n}\nif (!__vue_options__.computed) __vue_options__.computed = {}\nObject.keys(__vue_styles__).forEach(function (key) {\nvar module = __vue_styles__[key]\n__vue_options__.computed[key] = function () { return module }\n})\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/game/userCard.vue\n// module id = 367\n// module chunks = 1"],"sourceRoot":""}